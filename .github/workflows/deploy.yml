
name: Chatfia Dev CI/CD

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch: # (2).수동 실행도 가능하도록

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경

    #    if: github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'develop')

    env:
      NAVER_MAIL_PASSWORD: ${{ secrets.NAVER_MAIL_PASSWORD }}
      NAVER_MAIL_USERNAME: ${{ secrets.NAVER_MAIL_USERNAME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      KAKAO_SNS_APP_KEY: ${{ secrets.KAKAO_SNS_APP_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2 # 코드 check out

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # 자바 설치
          distribution: 'adopt'

      #  환경변수
      - name: Set Yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-dev.yml
        env:
          spring.datasource.username: ${{secrets.MYSQL_ROOT_USER}}
          spring.datasource.password: ${{secrets.MYSQL_ROOT_PASSWORD}}
          spring.data.redis.host: ${{ secrets.REDIS_HOST }}
          spring.data.redis.prot: ${{ secrets.REDIS_PORT }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # 권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # build 시작

      - name: Get current-time
        uses: gerred/actions/current-time@master
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build 시점의 시간 확보

      - name: Show Current Time
        run: echo "CurrentTime=${{ steps.current-time.outputs.time }}"
        shell: bash # (9).확보한 시간 보여 주기

      - name: Test with Gradle
        run: ./gradlew --info test # (10).test 시작

      - name: Get current time test
        uses: gerred/actions/current-time@master
        id: current-time-test
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (11).test 시점의 시간 확보

      - name: Show Current Time test
        run: echo "CurrentTime=${{ steps.current-time.outputs.time }}"
        shell: bash # (12).확보한 시간 보여 주기

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time-test.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      # 도커 로그인 + 빌드
      - name: Docker build
        run: |
          docker login -u ${{ env.DOCKERHUB_USERNAME }} -p ${{ env.DOCKERHUB_TOKEN }}
          docker build -t chatpiaspringles/springles .
          docker images
          docker push chatpiaspringles/springles
      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          envs: $GITHUB_SHA
          port: 22
          script: |
            sudo docker login -u ${{ env.DOCKERHUB_USERNAME }} -p ${{ env.DOCKERHUB_PASSWORD }}
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull chatpiaspringles/springles:latest
            sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo rm /usr/bin/docker-compose
            sudo docker-compose up -d
            sudo docker image prune -f
            sudo docker run -d -p 8080:8080 chatpiaspringles/springles:latest --NAVER_MAIL_PASSWORD=${{secrets.NAVER_MAIL_PASSWORD}} --NAVER_MAIL_USERNAME=${{secrets.NAVER_MAIL_USERNAME}} --REDIS_PORT=${{secrets.REDIS_PORT}} --KAKAO_SNS_APP_KEY=${{secrets.KAKAO_SNS_APP_KEY}} --HOST:${{secrets.HOST}}
